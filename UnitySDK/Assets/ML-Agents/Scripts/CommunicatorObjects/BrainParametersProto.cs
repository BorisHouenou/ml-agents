// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mlagents/envs/communicator_objects/brain_parameters_proto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MLAgents.CommunicatorObjects {

  /// <summary>Holder for reflection information generated from mlagents/envs/communicator_objects/brain_parameters_proto.proto</summary>
  public static partial class BrainParametersProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for mlagents/envs/communicator_objects/brain_parameters_proto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrainParametersProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9tbGFnZW50cy9lbnZzL2NvbW11bmljYXRvcl9vYmplY3RzL2JyYWluX3Bh",
            "cmFtZXRlcnNfcHJvdG8ucHJvdG8SFGNvbW11bmljYXRvcl9vYmplY3RzGjlt",
            "bGFnZW50cy9lbnZzL2NvbW11bmljYXRvcl9vYmplY3RzL3Jlc29sdXRpb25f",
            "cHJvdG8ucHJvdG8aOW1sYWdlbnRzL2VudnMvY29tbXVuaWNhdG9yX29iamVj",
            "dHMvc3BhY2VfdHlwZV9wcm90by5wcm90byKSAwoUQnJhaW5QYXJhbWV0ZXJz",
            "UHJvdG8SHwoXdmVjdG9yX29ic2VydmF0aW9uX3NpemUYASABKAUSJwofbnVt",
            "X3N0YWNrZWRfdmVjdG9yX29ic2VydmF0aW9ucxgCIAEoBRInCh92ZWN0b3Jf",
            "b2JzZXJ2YXRpb25fZGVzY3JpcHRpb25zGAMgAygJEhoKEnZlY3Rvcl9hY3Rp",
            "b25fc2l6ZRgEIAMoBRJBChJjYW1lcmFfcmVzb2x1dGlvbnMYBSADKAsyJS5j",
            "b21tdW5pY2F0b3Jfb2JqZWN0cy5SZXNvbHV0aW9uUHJvdG8SIgoadmVjdG9y",
            "X2FjdGlvbl9kZXNjcmlwdGlvbnMYBiADKAkSRgoYdmVjdG9yX2FjdGlvbl9z",
            "cGFjZV90eXBlGAcgASgOMiQuY29tbXVuaWNhdG9yX29iamVjdHMuU3BhY2VU",
            "eXBlUHJvdG8SEgoKYnJhaW5fbmFtZRgIIAEoCRITCgtpc190cmFpbmluZxgJ",
            "IAEoCBITCgthZ2VudF9uYW1lcxgKIAMoCUIfqgIcTUxBZ2VudHMuQ29tbXVu",
            "aWNhdG9yT2JqZWN0c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MLAgents.CommunicatorObjects.ResolutionProtoReflection.Descriptor, global::MLAgents.CommunicatorObjects.SpaceTypeProtoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MLAgents.CommunicatorObjects.BrainParametersProto), global::MLAgents.CommunicatorObjects.BrainParametersProto.Parser, new[]{ "VectorObservationSize", "NumStackedVectorObservations", "VectorObservationDescriptions", "VectorActionSize", "CameraResolutions", "VectorActionDescriptions", "VectorActionSpaceType", "BrainName", "IsTraining", "AgentNames" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BrainParametersProto : pb::IMessage<BrainParametersProto> {
    private static readonly pb::MessageParser<BrainParametersProto> _parser = new pb::MessageParser<BrainParametersProto>(() => new BrainParametersProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrainParametersProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MLAgents.CommunicatorObjects.BrainParametersProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainParametersProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainParametersProto(BrainParametersProto other) : this() {
      vectorObservationSize_ = other.vectorObservationSize_;
      numStackedVectorObservations_ = other.numStackedVectorObservations_;
      vectorObservationDescriptions_ = other.vectorObservationDescriptions_.Clone();
      vectorActionSize_ = other.vectorActionSize_.Clone();
      cameraResolutions_ = other.cameraResolutions_.Clone();
      vectorActionDescriptions_ = other.vectorActionDescriptions_.Clone();
      vectorActionSpaceType_ = other.vectorActionSpaceType_;
      brainName_ = other.brainName_;
      isTraining_ = other.isTraining_;
      agentNames_ = other.agentNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainParametersProto Clone() {
      return new BrainParametersProto(this);
    }

    /// <summary>Field number for the "vector_observation_size" field.</summary>
    public const int VectorObservationSizeFieldNumber = 1;
    private int vectorObservationSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VectorObservationSize {
      get { return vectorObservationSize_; }
      set {
        vectorObservationSize_ = value;
      }
    }

    /// <summary>Field number for the "num_stacked_vector_observations" field.</summary>
    public const int NumStackedVectorObservationsFieldNumber = 2;
    private int numStackedVectorObservations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumStackedVectorObservations {
      get { return numStackedVectorObservations_; }
      set {
        numStackedVectorObservations_ = value;
      }
    }

    /// <summary>Field number for the "vector_observation_descriptions" field.</summary>
    public const int VectorObservationDescriptionsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_vectorObservationDescriptions_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> vectorObservationDescriptions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VectorObservationDescriptions {
      get { return vectorObservationDescriptions_; }
    }

    /// <summary>Field number for the "vector_action_size" field.</summary>
    public const int VectorActionSizeFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_vectorActionSize_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> vectorActionSize_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> VectorActionSize {
      get { return vectorActionSize_; }
    }

    /// <summary>Field number for the "camera_resolutions" field.</summary>
    public const int CameraResolutionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::MLAgents.CommunicatorObjects.ResolutionProto> _repeated_cameraResolutions_codec
        = pb::FieldCodec.ForMessage(42, global::MLAgents.CommunicatorObjects.ResolutionProto.Parser);
    private readonly pbc::RepeatedField<global::MLAgents.CommunicatorObjects.ResolutionProto> cameraResolutions_ = new pbc::RepeatedField<global::MLAgents.CommunicatorObjects.ResolutionProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MLAgents.CommunicatorObjects.ResolutionProto> CameraResolutions {
      get { return cameraResolutions_; }
    }

    /// <summary>Field number for the "vector_action_descriptions" field.</summary>
    public const int VectorActionDescriptionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_vectorActionDescriptions_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> vectorActionDescriptions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VectorActionDescriptions {
      get { return vectorActionDescriptions_; }
    }

    /// <summary>Field number for the "vector_action_space_type" field.</summary>
    public const int VectorActionSpaceTypeFieldNumber = 7;
    private global::MLAgents.CommunicatorObjects.SpaceTypeProto vectorActionSpaceType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MLAgents.CommunicatorObjects.SpaceTypeProto VectorActionSpaceType {
      get { return vectorActionSpaceType_; }
      set {
        vectorActionSpaceType_ = value;
      }
    }

    /// <summary>Field number for the "brain_name" field.</summary>
    public const int BrainNameFieldNumber = 8;
    private string brainName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrainName {
      get { return brainName_; }
      set {
        brainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_training" field.</summary>
    public const int IsTrainingFieldNumber = 9;
    private bool isTraining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTraining {
      get { return isTraining_; }
      set {
        isTraining_ = value;
      }
    }

    /// <summary>Field number for the "agent_names" field.</summary>
    public const int AgentNamesFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_agentNames_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> agentNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AgentNames {
      get { return agentNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrainParametersProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrainParametersProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VectorObservationSize != other.VectorObservationSize) return false;
      if (NumStackedVectorObservations != other.NumStackedVectorObservations) return false;
      if(!vectorObservationDescriptions_.Equals(other.vectorObservationDescriptions_)) return false;
      if(!vectorActionSize_.Equals(other.vectorActionSize_)) return false;
      if(!cameraResolutions_.Equals(other.cameraResolutions_)) return false;
      if(!vectorActionDescriptions_.Equals(other.vectorActionDescriptions_)) return false;
      if (VectorActionSpaceType != other.VectorActionSpaceType) return false;
      if (BrainName != other.BrainName) return false;
      if (IsTraining != other.IsTraining) return false;
      if(!agentNames_.Equals(other.agentNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VectorObservationSize != 0) hash ^= VectorObservationSize.GetHashCode();
      if (NumStackedVectorObservations != 0) hash ^= NumStackedVectorObservations.GetHashCode();
      hash ^= vectorObservationDescriptions_.GetHashCode();
      hash ^= vectorActionSize_.GetHashCode();
      hash ^= cameraResolutions_.GetHashCode();
      hash ^= vectorActionDescriptions_.GetHashCode();
      if (VectorActionSpaceType != 0) hash ^= VectorActionSpaceType.GetHashCode();
      if (BrainName.Length != 0) hash ^= BrainName.GetHashCode();
      if (IsTraining != false) hash ^= IsTraining.GetHashCode();
      hash ^= agentNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VectorObservationSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VectorObservationSize);
      }
      if (NumStackedVectorObservations != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumStackedVectorObservations);
      }
      vectorObservationDescriptions_.WriteTo(output, _repeated_vectorObservationDescriptions_codec);
      vectorActionSize_.WriteTo(output, _repeated_vectorActionSize_codec);
      cameraResolutions_.WriteTo(output, _repeated_cameraResolutions_codec);
      vectorActionDescriptions_.WriteTo(output, _repeated_vectorActionDescriptions_codec);
      if (VectorActionSpaceType != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) VectorActionSpaceType);
      }
      if (BrainName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BrainName);
      }
      if (IsTraining != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsTraining);
      }
      agentNames_.WriteTo(output, _repeated_agentNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VectorObservationSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VectorObservationSize);
      }
      if (NumStackedVectorObservations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumStackedVectorObservations);
      }
      size += vectorObservationDescriptions_.CalculateSize(_repeated_vectorObservationDescriptions_codec);
      size += vectorActionSize_.CalculateSize(_repeated_vectorActionSize_codec);
      size += cameraResolutions_.CalculateSize(_repeated_cameraResolutions_codec);
      size += vectorActionDescriptions_.CalculateSize(_repeated_vectorActionDescriptions_codec);
      if (VectorActionSpaceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VectorActionSpaceType);
      }
      if (BrainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrainName);
      }
      if (IsTraining != false) {
        size += 1 + 1;
      }
      size += agentNames_.CalculateSize(_repeated_agentNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrainParametersProto other) {
      if (other == null) {
        return;
      }
      if (other.VectorObservationSize != 0) {
        VectorObservationSize = other.VectorObservationSize;
      }
      if (other.NumStackedVectorObservations != 0) {
        NumStackedVectorObservations = other.NumStackedVectorObservations;
      }
      vectorObservationDescriptions_.Add(other.vectorObservationDescriptions_);
      vectorActionSize_.Add(other.vectorActionSize_);
      cameraResolutions_.Add(other.cameraResolutions_);
      vectorActionDescriptions_.Add(other.vectorActionDescriptions_);
      if (other.VectorActionSpaceType != 0) {
        VectorActionSpaceType = other.VectorActionSpaceType;
      }
      if (other.BrainName.Length != 0) {
        BrainName = other.BrainName;
      }
      if (other.IsTraining != false) {
        IsTraining = other.IsTraining;
      }
      agentNames_.Add(other.agentNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VectorObservationSize = input.ReadInt32();
            break;
          }
          case 16: {
            NumStackedVectorObservations = input.ReadInt32();
            break;
          }
          case 26: {
            vectorObservationDescriptions_.AddEntriesFrom(input, _repeated_vectorObservationDescriptions_codec);
            break;
          }
          case 34:
          case 32: {
            vectorActionSize_.AddEntriesFrom(input, _repeated_vectorActionSize_codec);
            break;
          }
          case 42: {
            cameraResolutions_.AddEntriesFrom(input, _repeated_cameraResolutions_codec);
            break;
          }
          case 50: {
            vectorActionDescriptions_.AddEntriesFrom(input, _repeated_vectorActionDescriptions_codec);
            break;
          }
          case 56: {
            vectorActionSpaceType_ = (global::MLAgents.CommunicatorObjects.SpaceTypeProto) input.ReadEnum();
            break;
          }
          case 66: {
            BrainName = input.ReadString();
            break;
          }
          case 72: {
            IsTraining = input.ReadBool();
            break;
          }
          case 82: {
            agentNames_.AddEntriesFrom(input, _repeated_agentNames_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
